Recursion

In your own words, what is recursion?
    Recursion is a function that calls itself. 
Why is it necessary to have a base case?
    Base cases gives a hard limit to the recursion, it gives us a stopping point.
Graphs

What is a graph?
    Trees with loops!
How is a graph different from a tree?
    Trees have arrows with directions but they don't cycle like graphs.
Give an example of something that would be good to model with a graph.
    I'd use a graph for instructions for something complicated- with repeated steps. Like making pastry at home.


Performance of Different Data Structures

Fill in the missing spots in the chart with the correct runtimes. Do this by reasoning through how the data structures work, NOT by looking up the solution. Add-R means add to the right/end/top and Add-L means add to the left/beginning/bottom. There are X’s in the spots where that operation doesn’t make sense for that data structure (for instance, you can’t index a stack, or pop from the end of a queue). We’ve provided the first few answers for you.

Fill in the runtimes for the following actions for the table below:


Data Structure  Index   Search  Add-R   Add-L   Pop-L   Pop-R

Python List (Array) O(1)    O(n)    O(1)   0(n)   0(n)    0(1)   
Linked List         0(n)    0(n)    0(1)  0(1)    O(1)    0(n)
Doubly-Linked List   0(n)   0(n)    O(1)   O(1)   O(1)    O(1)
Queue (as Array)    X   X    X      O(1)   X      O(n)
Queue (as LL or DLL)    X   X  X   O(1)    X      O(1)
Stack (as Array, LL, or DLL) X  X  O(1)      X   X        O(1)
Deque (as DLL)  X   X              O(1)     O(1)     O(1)   O(1)

Index: Find an item in the structure when you know its position
Search: Find an item in the structure when you know its data
Add(R/L): Set a key in set/dictionary or add node to tree
Pop(R/L): Remove a key or node

Fill in Runtime and Memory:

The answers for dictionary have been provided; you should fill in the rest:

Data Structure          Get    Add    Delete    Iterate    Memory
Dictionary (Hash Map)   O(1)    O(1)    O(1)    O(n)    medium
Set (Hash Map)          O(1)    O(1)    O(1)    O(n)       medium
Binary Search Tree      O(log n) O(log n) O(log n) O(log n)   little
Tree                    O(n)  O(1)/O(n)  O(1)    O(n)     little

Get: Find an item in the structure
Add: Set a key in set/dictionary or add node to tree
Delete: Remove a key or node
Iterate: Find next item in data structure
Memory: Relative to data, how much memory is used? (Choices: a little, medium, or a lot)
Sorting

Describe in words how the Bubble Sort algorithm works.
    bubble sort loops over pairs of numbers and swaps the larger number up pair by pair. 

Describe in words how the Merge Sort algorithm works.
    So fast! it is sort of like bubble in that it compares two numbers and pushes the bigger one forward but this works on two different sorted lists, not a single list.
    If it starts with 1 list, it chunks it into pairs and sorts.  

Describe in words how the Quick Sort algorithm works.
    Quicksort works by choosing a pivot point to measure all the other members of the list against. It sorts by iterating through the list and compairing points against the pivor and swapping them if necessary.

